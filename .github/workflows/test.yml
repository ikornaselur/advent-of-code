name: Test and lint

on:
  push:
    branches:
      - "**"

jobs:
  build:
    name: Build and cache project
    runs-on: ubuntu-latest
    strategy:
      matrix:
        base-dir:
          - "year2022"
          - "year2023"
          - "year2024"
    defaults:
      run:
        working-directory: ${{ matrix.base-dir }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache
        id: cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "run-${{ matrix.base-dir }}"

      - name: Create empty inputs
        run: find . -maxdepth 1 -type d -name 'prob*' -exec touch "{}/input.txt" \;

      - name: Build project
        if: steps.cache.outputs.cache-hit != 'true'
        run: cargo build --tests

      - name: Cargo check to build a check cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: cargo check

  check:
    name: Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        base-dir:
          - "year2022"
          - "year2023"
          - "year2024"
    defaults:
      run:
        working-directory: ${{ matrix.base-dir }}
    needs: [build]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "run-${{ matrix.base-dir }}"

      - name: Create empty inputs
        run: find . -maxdepth 1 -type d -name 'prob*' -exec touch "{}/input.txt" \;

      - name: Run cargo check
        run: cargo check

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        base-dir:
          - "year2022"
          - "year2023"
          - "year2024"
    defaults:
      run:
        working-directory: ${{ matrix.base-dir }}
    needs: [build]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "run-${{ matrix.base-dir }}"

      - name: Create empty inputs
        run: find . -maxdepth 1 -type d -name 'prob*' -exec touch "{}/input.txt" \;

      - name: Run cargo test
        run: cargo test

  lints:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        base-dir:
          - "year2022"
          - "year2023"
          - "year2024"
    defaults:
      run:
        working-directory: ${{ matrix.base-dir }}
    needs: [build]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "run-${{ matrix.base-dir }}"

      - name: Create empty inputs
        run: find . -maxdepth 1 -type d -name 'prob*' -exec touch "{}/input.txt" \;

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

      - name: Run cargo clippy
        run: cargo clippy -- -D warnings
